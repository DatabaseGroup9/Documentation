swagger: '2.0'
info:
  description: 'This is a sample server Gutenberg Geolocations server.  You can find out more about our project at [Final Semester Project](https://github.com/DatabaseGroup9/Gutenberg-Geolocation/wiki)'
  version: 1.0.0
  title: Gutenberg Geolocations
  termsOfService: 'https://github.com/DatabaseGroup9/Gutenberg-Geolocation/wiki'
  contact:
    email: cph@cphbusiness.dk
  license:
    name: Apache 2.0
    url: 'https://github.com/DatabaseGroup9'
host: localhost
basePath: /v2
tags:
  - name: books
    description: Get books including title and author
    externalDocs:
      description: ''
      url: 'https://github.com/DatabaseGroup9'
  - name: cities
    description: Access to cities with geocoordianates mentioned in a book
    externalDocs:
      description: ''
      url: 'https://github.com/DatabaseGroup9'
  - name: bookWithCities
    description: Get books including title,author and cities mentioned in the book
    externalDocs:
      description: ''
      url: 'https://github.com/DatabaseGroup9'

schemes:
  - http
paths:
  /books/findByCity:
    get:
      tags:
        - books
      summary: 1) Given a city name your application returns all book titles with corresponding authors that mention this city.
      description: Only one city is allowed
      operationId: findBooksByCityName
      produces:
        - application/json
      parameters:
        - name: cityName
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        '400':
          description: Invalid city value
  /books/findByAuthor:
    get:
      tags:
        - bookWithCities
      summary: '3) Given an author name, your application lists all books written by that author and plots all cities mentioned in any of the books onto a map.'
      description: Only one author is allowed
      operationId: findBooksByAuthor
      produces:
        - application/json
      parameters:
        - name: authorFullName
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BookWithCities'
        '400':
          description: Invalid author value
  /books/findByGeolocation:
    get:
      tags:
        - books
      summary: '4) Given a geolocation, your application lists all books mentioning a city in vicinity of the given geolocation.'
      description: Only one author is allowed
      operationId: findBooksByGeolocation
      produces:
        - application/json
      parameters:
        - name: lon
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: string
        - name: lat
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BookWithCities'
        '400':
          description: Invalid author value
  /cities/findByBookTitle:
    get:
      tags:
        - cities
      summary: '2) Given a book title, your application plots all cities mentioned in this book onto a map.'
      description: Only one city is allowed
      operationId: findCitiesByBookTitle
      produces:
        - application/json
      parameters:
        - name: bookTitle
          in: query
          description: Full book title name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/City'
        '400':
          description: Invalid book title value
definitions:
  Author:
    type: object
    required:
      - authorID
      - fullName
    properties:
      authorID:
        type: string
        example: m600044
      fullName:
        type: string
        example: Steele, Rudd 
      firstName:
        type: string
        example: Rudd
      surName:
        type: string
        example: Steele
      title:
        type: string
        example: mr
  Cities:
    type: array
    items:
      $ref: "#/definitions/City"
  City:
    type: object
    required:
      - name
      - lon
      - lat
    properties:
      cityID:
        type: integer
        format: int64
      name:
        type: string
        example: Copenhagen
      lon:
        type: number
        format: double
        example: 12.6
      lat:
        type: number
        format: double
        example: 12.6
  Book:
    type: object
    required:
      - bookTitle
      - author
    properties:
      bookID:
        type: integer
        format: int64
        example: 283428
      bookTitle:
        type: string
        example: Pride and Prejudice
      author:
        $ref: "#/definitions/Author"
  BookWithCities:
    type: object
    required:
      - bookTitle
      - author
    properties:
      bookID:
        type: integer
        format: int64
      bookTitle:
        type: string
        example: Pride and Prejudice
      author:
        $ref: "#/definitions/Author"
      cities:
        $ref: "#/definitions/Cities"
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'https://github.com/DatabaseGroup9/Gutenberg-Geolocation/wiki'
